{"ast":null,"code":"var _jsxFileName = \"D:\\\\intellijProjects\\\\react-emailLoginSidePJ\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  //최신 스냅샷 state, dispatch 된 action\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'USER_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  /*const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();*/\n\n  /*const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();*/\n  const [formIsValid, setFormIsValid] = useState(false); //인수로 reducerFn 과 초기 state 설정\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  /*useEffect(() => {\n  \tconsole.log('effect running')\n  \treturn () => {\n  \t\tconsole.log('effect cleanup');\n  \t}\n  }, [])\n  \tuseEffect(() => {\n  \tconst identifier = setTimeout(() => {\n  \t\tconsole.log('유효성 식별 검사')\n  \t\t//이메일에 @ 가 포함되어야하며 입력된 비밀번호가 정확한지 체크 및 입력 이메일또는 비번이 변경될때 업데이트\n  \t\tsetFormIsValid(\n  \t\t\t\temailState.value.includes('@') && passwordState.value.trim().length > 6);\n  \t}, 500) // 0.5초 딜레이\n  \treturn () => {\n  \t\tconsole.log('clean up')\n  \t\tclearTimeout(identifier) // 타이머 초기화\n  \t\t}\n  }, [emailState, passwordState])*/\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    // 비밀번호가 변경될때 \n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); //비밀번호가 6자리 이상인지 @가 포함되어있는지\n\n    setFormIsValid(passwordState.isValid && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.isValid.includes('@'));\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    //setPasswordIsValid(passwordState.value.trim().length > 6);\n    dispatchPassword({\n      type: 'USER_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Login, \"BPa23vGUvoPglTM8r63ObLRmuj4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["D:/intellijProjects/react-emailLoginSidePJ/src/components/Login/Login.js"],"sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => { //최신 스냅샷 state, dispatch 된 action\n\tif (action.type === 'USER_INPUT') {\n\t\treturn {value: action.val, isValid: action.val.includes('@')}\n\t}\n\tif(action.type === 'USER_BLUR'){\n\t\treturn {value: state.value, isValid: state.value.includes('@')}\n\t}\n\t\treturn {value: '', isValid: false}\n}\n\nconst passwordReducer = (state, action) => {\n\tif(action.type === 'USER_INPUT'){\n\t\treturn {value: action.val, isValid: action.val.trim().length > 6}\n\t}\n\tif (action.type === 'INPUT_BLUR'){\n\t\treturn {value: state.value, isValid: state.value.trim().length > 6}\n\t}\n\treturn {value: '', isValid: false}\n}\n\nconst Login = (props) => {\n\t/*const [enteredEmail, setEnteredEmail] = useState('');\n\tconst [emailIsValid, setEmailIsValid] = useState();*/\n\t/*const [enteredPassword, setEnteredPassword] = useState('');\n\tconst [passwordIsValid, setPasswordIsValid] = useState();*/\n\tconst [formIsValid, setFormIsValid] = useState(false);\n\n\t//인수로 reducerFn 과 초기 state 설정\n\tconst [emailState, dispatchEmail] = useReducer(emailReducer, {value: '', isValid: null,})\n\tconst [passwordState, dispatchPassword] = useReducer(passwordReducer, {value: '', isValid: null})\n\n\t/*useEffect(() => {\n\t\tconsole.log('effect running')\n\t\treturn () => {\n\t\t\tconsole.log('effect cleanup');\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst identifier = setTimeout(() => {\n\t\t\tconsole.log('유효성 식별 검사')\n\t\t\t//이메일에 @ 가 포함되어야하며 입력된 비밀번호가 정확한지 체크 및 입력 이메일또는 비번이 변경될때 업데이트\n\t\t\tsetFormIsValid(\n\t\t\t\t\temailState.value.includes('@') && passwordState.value.trim().length > 6);\n\t\t}, 500) // 0.5초 딜레이\n\t\treturn () => {\n\t\t\tconsole.log('clean up')\n\t\t\tclearTimeout(identifier) // 타이머 초기화\n\n\t\t}\n\t}, [emailState, passwordState])*/\n\n\tconst emailChangeHandler = (event) => {\n\t\tdispatchEmail({\n\t\t\ttype: 'USER_INPUT',\n\t\t\tval: event.target.value,\n\t\t});\n\t};\n\n\tconst passwordChangeHandler = (event) => {\n\t\t// 비밀번호가 변경될때 \n\t\tdispatchPassword({\n\t\t\ttype: 'USER_INPUT',\n\t\t\tval: event.target.value,\n\t\t});\n\n\t\t//비밀번호가 6자리 이상인지 @가 포함되어있는지\n\t\tsetFormIsValid(\n\t\t\t\tpasswordState.isValid && emailState.isValid\n\t\t);\n\t};\n\n\tconst validateEmailHandler = () => {\n\t\t//setEmailIsValid(emailState.isValid.includes('@'));\n\t\tdispatchEmail({\n\t\t\ttype: 'INPUT_BLUR',\n\t\t})\n\t};\n\n\tconst validatePasswordHandler = () => {\n\t\t//setPasswordIsValid(passwordState.value.trim().length > 6);\n\t\tdispatchPassword({\n\t\t\ttype: 'USER_BLUR',\n\t\t})\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tprops.onLogin(emailState.value, passwordState.value);\n\t};\n\n\treturn (\n\t\t\t<Card className={classes.login}>\n\t\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`${classes.control} ${\n\t\t\t\t\t\t\t\t\temailState.isValid === false ? classes.invalid : ''\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<label htmlFor=\"email\">E-Mail</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tvalue={emailState.value}\n\t\t\t\t\t\t\t\tonChange={emailChangeHandler}\n\t\t\t\t\t\t\t\tonBlur={validateEmailHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`${classes.control} ${\n\t\t\t\t\t\t\t\t\tpasswordState.isValid === false ? classes.invalid : ''\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tvalue={passwordState.value}\n\t\t\t\t\t\t\t\tonChange={passwordChangeHandler}\n\t\t\t\t\t\t\t\tonBlur={validatePasswordHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t\t<Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Card>\n\t);\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}