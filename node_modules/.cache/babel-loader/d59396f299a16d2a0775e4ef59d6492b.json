{"ast":null,"code":"var _jsxFileName = \"D:\\\\intellijProjects\\\\react-emailLoginSidePJ\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from \"./Store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const contextLogInOut = useContext(AuthContext);\n  return (\n    /*#__PURE__*/\n\n    /*AuthContext 를 Wrapper 로 사용(root 수준 컴포넌트로 반환하기때문)\n    * MainHeader 뿐만 아니라 Login 및 Home 컴포넌트 등 모든 자식은 AuthContext 에 접근할 수 있음\n    * */\n    _jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!contextLogInOut.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 38\n        }, this), contextLogInOut.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this)\n  );\n}\n\n_s(App, \"0HoPdy9zAG5IzWTzEnNL+Fchbn0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","Login","Home","MainHeader","AuthContext","App","contextLogInOut","isLoggedIn"],"sources":["D:/intellijProjects/react-emailLoginSidePJ/src/App.js"],"sourcesContent":["import React, {useContext} from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from \"./Store/auth-context\";\n\nfunction App() {\n\tconst contextLogInOut = useContext(AuthContext)\n\treturn (\n\t\t\t/*AuthContext 를 Wrapper 로 사용(root 수준 컴포넌트로 반환하기때문)\n\t\t\t* MainHeader 뿐만 아니라 Login 및 Home 컴포넌트 등 모든 자식은 AuthContext 에 접근할 수 있음\n\t\t\t* */\n\t\t\t<React.Fragment>\n\t\t\t\t<MainHeader/>\n\t\t\t\t<main>\n\t\t\t\t\t{/*context 에서 설정한 isLoggedIn 얻기*/}\n\t\t\t\t\t{!contextLogInOut.isLoggedIn && <Login />}\n\t\t\t\t\t{contextLogInOut.isLoggedIn && <Home />}\n\t\t\t\t</main>\n\t\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACd,MAAMC,eAAe,GAAGN,UAAU,CAACI,WAAD,CAAlC;EACA;IAAA;;IACE;AACH;AACA;IACG,QAAC,KAAD,CAAO,QAAP;MAAA,wBACC,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QADD,eAEC;QAAA,WAEE,CAACE,eAAe,CAACC,UAAjB,iBAA+B,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA,QAFjC,EAGED,eAAe,CAACC,UAAhB,iBAA8B,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA,QAHhC;MAAA;QAAA;QAAA;QAAA;MAAA,QAFD;IAAA;MAAA;MAAA;MAAA;IAAA;EAJF;AAaA;;GAfQF,G;;KAAAA,G;AAiBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}