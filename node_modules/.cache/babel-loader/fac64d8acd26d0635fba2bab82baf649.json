{"ast":null,"code":"var _jsxFileName = \"D:\\\\intellijProjects\\\\react-emailLoginSidePJ\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from \"../../Store/auth-context\";\nimport Input from \"../UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  //최신 스냅샷 state, dispatch 된 action\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'USER_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = () => {\n  _s();\n\n  /*const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();*/\n\n  /*const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();*/\n  const [formIsValid, setFormIsValid] = useState(false); //인수로 reducerFn 과 초기 state 설정\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const contextLogInOut = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  /*useEffect(() => {\n  \tconsole.log('effect running')\n  \treturn () => {\n  \t\tconsole.log('effect cleanup');\n  \t}\n  }, [])*/\n  // 객체 디스트럭쳐링으로 emailState 에서 isValid 속성을 가져왔고 유효성 검사를 하지않을땐 useEffect 가 실행되지않음\n\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    // 다른 state 를 기준으로 state 를 update 하는 좋은 방법\n    const identifier = setTimeout(() => {\n      console.log('유효성 식별 검사'); //이메일에 @ 가 포함되어야하며 입력된 비밀번호가 정확한지 체크 및 입력 이메일또는 비번이 변경될때 업데이트\n\n      setFormIsValid( // setFormIsValid 가 useEffect 안에있기때문에 여전히 state 스냅샷을 참조한다\n      emailState.isValid && passwordState.isValid);\n    }, 500); // 0.5초 딜레이\n\n    return () => {\n      console.log('clean up');\n      clearTimeout(identifier); // 타이머 초기화\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    // 비밀번호가 변경될때 dispatchPassword 호출\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); //비밀번호가 6자리 이상인지 @가 포함되어있는지\n\n    setFormIsValid(event.target.value.trim().length > 6 && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.isValid.includes('@'));\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    //setPasswordIsValid(passwordState.value.trim().length > 6);\n    dispatchPassword({\n      type: 'USER_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      contextLogInOut.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {} else {}\n\n    contextLogInOut.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        type: \"email\",\n        label: \"E-Mail\",\n        ref: emailInputRef,\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        type: \"password\",\n        ref: passwordInputRef,\n        label: \"Password\",\n        value: passwordState.value,\n        autoComplete: \"on\",\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Login, \"vOhpDY4E8ZWUvZ7Vk8w/yNhtk98=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","contextLogInOut","emailInputRef","passwordInputRef","emailIsValid","passwordIsValid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"sources":["D:/intellijProjects/react-emailLoginSidePJ/src/components/Login/Login.js"],"sourcesContent":["import React, {useState, useEffect, useReducer, useContext, useRef} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from \"../../Store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\nconst emailReducer = (state, action) => { //최신 스냅샷 state, dispatch 된 action\n\tif (action.type === 'USER_INPUT') {\n\t\treturn {value: action.val, isValid: action.val.includes('@')}\n\t}\n\tif (action.type === 'USER_BLUR') {\n\t\treturn {value: state.value, isValid: state.value.includes('@')}\n\t}\n\treturn {value: '', isValid: false}\n}\n\nconst passwordReducer = (state, action) => {\n\tif (action.type === 'USER_INPUT') {\n\t\treturn {value: action.val, isValid: action.val.trim().length > 6}\n\t}\n\tif (action.type === 'INPUT_BLUR') {\n\t\treturn {value: state.value, isValid: state.value.trim().length > 6}\n\t}\n\treturn {value: '', isValid: false}\n}\n\nconst Login = () => {\n\t/*const [enteredEmail, setEnteredEmail] = useState('');\n\tconst [emailIsValid, setEmailIsValid] = useState();*/\n\t/*const [enteredPassword, setEnteredPassword] = useState('');\n\tconst [passwordIsValid, setPasswordIsValid] = useState();*/\n\tconst [formIsValid, setFormIsValid] = useState(false);\n\n\t//인수로 reducerFn 과 초기 state 설정\n\tconst [emailState, dispatchEmail] = useReducer(emailReducer, {value: '', isValid: null,})\n\tconst [passwordState, dispatchPassword] = useReducer(passwordReducer, {value: '', isValid: null})\n\n\tconst contextLogInOut = useContext(AuthContext)\n\n\tconst emailInputRef = useRef()\n\tconst passwordInputRef = useRef()\n\n\t/*useEffect(() => {\n\t\tconsole.log('effect running')\n\t\treturn () => {\n\t\t\tconsole.log('effect cleanup');\n\t\t}\n\t}, [])*/\n\n\t// 객체 디스트럭쳐링으로 emailState 에서 isValid 속성을 가져왔고 유효성 검사를 하지않을땐 useEffect 가 실행되지않음\n\tconst {isValid: emailIsValid} = emailState;\n\tconst {isValid: passwordIsValid} = passwordState;\n\n\tuseEffect(() => { // 다른 state 를 기준으로 state 를 update 하는 좋은 방법\n\t\tconst identifier = setTimeout(() => {\n\t\t\tconsole.log('유효성 식별 검사')\n\t\t\t//이메일에 @ 가 포함되어야하며 입력된 비밀번호가 정확한지 체크 및 입력 이메일또는 비번이 변경될때 업데이트\n\t\t\tsetFormIsValid( // setFormIsValid 가 useEffect 안에있기때문에 여전히 state 스냅샷을 참조한다\n\t\t\t\t\temailState.isValid && passwordState.isValid)\n\t\t}, 500) // 0.5초 딜레이\n\t\treturn () => {\n\t\t\tconsole.log('clean up')\n\t\t\tclearTimeout(identifier) // 타이머 초기화\n\n\t\t}\n\t}, [emailIsValid, passwordIsValid])\n\n\tconst emailChangeHandler = (event) => {\n\t\tdispatchEmail({\n\t\t\ttype: 'USER_INPUT',\n\t\t\tval: event.target.value,\n\t\t});\n\n\t\tsetFormIsValid(\n\t\t\t\tevent.target.value.includes('@') && passwordState.isValid\n\t\t)\n\t};\n\n\tconst passwordChangeHandler = (event) => {\n\t\t// 비밀번호가 변경될때 dispatchPassword 호출\n\t\tdispatchPassword({\n\t\t\ttype: 'USER_INPUT',\n\t\t\tval: event.target.value,\n\t\t});\n\n\t\t//비밀번호가 6자리 이상인지 @가 포함되어있는지\n\t\tsetFormIsValid(\n\t\t\t\tevent.target.value.trim().length > 6 && emailState.isValid\n\t\t);\n\t};\n\n\tconst validateEmailHandler = () => {\n\t\t//setEmailIsValid(emailState.isValid.includes('@'));\n\t\tdispatchEmail({\n\t\t\ttype: 'INPUT_BLUR',\n\t\t})\n\t};\n\n\tconst validatePasswordHandler = () => {\n\t\t//setPasswordIsValid(passwordState.value.trim().length > 6);\n\t\tdispatchPassword({\n\t\t\ttype: 'USER_BLUR',\n\t\t})\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tif (formIsValid) {\n\t\t\tcontextLogInOut.onLogin(emailState.value, passwordState.value)\n\t\t} else if (!emailIsValid) {\n\n\t\t} else {\n\n\t\t}\n\t\tcontextLogInOut.onLogin(emailState.value, passwordState.value);\n\t};\n\n\treturn (\n\t\t\t<Card className={classes.login}>\n\t\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t\t<Input\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tlabel=\"E-Mail\"\n\t\t\t\t\t\t\tref={emailInputRef}\n\t\t\t\t\t\t\tisValid={emailIsValid}\n\t\t\t\t\t\t\tvalue={emailState.value}\n\t\t\t\t\t\t\tonChange={emailChangeHandler}\n\t\t\t\t\t\t\tonBlur={validateEmailHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tref={passwordInputRef}\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\tvalue={passwordState.value}\n\t\t\t\t\t\t\tautoComplete=\"on\"\n\t\t\t\t\t\t\tonChange={passwordChangeHandler}\n\t\t\t\t\t\t\tonBlur={validatePasswordHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t\t<Button type=\"submit\" className={classes.btn}>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Card>\n\t);\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}