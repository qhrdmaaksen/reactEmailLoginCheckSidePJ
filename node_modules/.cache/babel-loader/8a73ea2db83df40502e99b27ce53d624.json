{"ast":null,"code":"var _jsxFileName = \"D:\\\\intellijProjects\\\\react-emailLoginSidePJ\\\\src\\\\components\\\\UI\\\\Input\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useImperativeHandle } from 'react';\nimport classes from './Input.module.css';\n/*div input component reuse refactor*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  _s();\n\n  /*input first field focusing*/\n  const inputRef = useRef();\n\n  const activate = () => {\n    inputRef.current.focus();\n  };\n  /*useEffect(()=>{ 이런식으로 사용하면 렌더링되는 최신 인풋인 두번째 password field 로 focusing 됨\r\n  \tinputRef.current.focus();\r\n  },[])*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.control} ${props.isValid === false ? classes.invalid : ''\n    /*인풋 유효성 검사*/\n    }`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: props.type,\n      id: props.id,\n      value: props.value,\n      onChange: props.onChange,\n      onBlur: props.onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Input, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useRef","useEffect","useImperativeHandle","classes","Input","props","inputRef","activate","current","focus","control","isValid","invalid","id","label","type","value","onChange","onBlur"],"sources":["D:/intellijProjects/react-emailLoginSidePJ/src/components/UI/Input/Input.js"],"sourcesContent":["import React, {useRef, useEffect, useImperativeHandle} from 'react';\r\n\r\nimport classes from './Input.module.css'\r\n\r\n/*div input component reuse refactor*/\r\nconst Input = (props) => {\r\n\r\n\t/*input first field focusing*/\r\n\tconst inputRef = useRef()\r\n\tconst activate = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\t/*useEffect(()=>{ 이런식으로 사용하면 렌더링되는 최신 인풋인 두번째 password field 로 focusing 됨\r\n\t\tinputRef.current.focus();\r\n\t},[])*/\r\n\r\n\treturn (\r\n\t\t\t<div\r\n\t\t\t\t\tclassName={`${classes.control} ${\r\n\t\t\t\t\t\t\tprops.isValid === false ? classes.invalid : '' /*인풋 유효성 검사*/\r\n\t\t\t\t\t}`}\r\n\t\t\t>\r\n\t\t\t\t<label htmlFor={props.id}>{props.label}</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\t\tref = {inputRef}\r\n\t\t\t\t\t\ttype={props.type}\r\n\t\t\t\t\t\tid={props.id}\r\n\t\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\t\tonChange={props.onChange}\r\n\t\t\t\t\t\tonBlur={props.onBlur}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t)\r\n}\r\nexport default Input ;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,mBAAlC,QAA4D,OAA5D;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AAEA;;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EAAA;;EAExB;EACA,MAAMC,QAAQ,GAAGN,MAAM,EAAvB;;EACA,MAAMO,QAAQ,GAAG,MAAM;IACtBD,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;EACA,CAFD;EAGA;AACD;AACA;;;EAEC,oBACE;IACE,SAAS,EAAG,GAAEN,OAAO,CAACO,OAAQ,IAC5BL,KAAK,CAACM,OAAN,KAAkB,KAAlB,GAA0BR,OAAO,CAACS,OAAlC,GAA4C;IAAG;IAChD,EAHH;IAAA,wBAKC;MAAO,OAAO,EAAEP,KAAK,CAACQ,EAAtB;MAAA,UAA2BR,KAAK,CAACS;IAAjC;MAAA;MAAA;MAAA;IAAA,QALD,eAMC;MACE,GAAG,EAAIR,QADT;MAEE,IAAI,EAAED,KAAK,CAACU,IAFd;MAGE,EAAE,EAAEV,KAAK,CAACQ,EAHZ;MAIE,KAAK,EAAER,KAAK,CAACW,KAJf;MAKE,QAAQ,EAAEX,KAAK,CAACY,QALlB;MAME,MAAM,EAAEZ,KAAK,CAACa;IANhB;MAAA;MAAA;MAAA;IAAA,QAND;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBA,CA5BD;;GAAMd,K;;KAAAA,K;AA6BN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}